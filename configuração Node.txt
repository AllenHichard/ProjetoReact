Back-End
na pasta 
yarn init -y
no projeto
yarn add express

Para Executar Um Arquivo
node index.js

No browser 
instalar o Json viewer

Para atualizar o browser sem reiniciar o servidor
yarn add nodemon -D
Executando
yarn nodemon index.js

Instalar o insomnia para testar as rotas
para 32bits getpostman

No mongoBD atlas
1- Database access
2- Add new user
3- Network access
	3.1- Allow access from anywhere (para qualquer um acessar)
4- Clusters
	4.1- Connect
	4.2- Connect your aplication
	4.3- Copy 

Dentro da aplicação executar o comando
yarn add mongoose

Caso mesmo configurando os parametros na conexão do mongoose continue dando erro, talvez seja erro por causa de um proxy
Para verificar basta digitar no browser: portquiz.net:27017
Caso não esteja conectado, baixar o mongoDB na própria máquina


yarn add axios para consumir dados de outras APIs'

baixar o mongodb compass community
Connect with MongoDB Compass


----------------------------------------------------------------------------------------------------------------------
// Métodos HTTP
// get, post, put, delete
// get = pegar informação
// post = salvar/criar informação
// put = editar informação
// delete = apagar informação

//Tipos de parâmetros
// Query params : request.query (Filtrosl, ordenação, paginação...)
// Route params : request.params (Identificar um recurso na alteração, remoção)
// Body: request.body (dados para criação ou alteração de um registro)

// MongoDB (não-relacional)
// MongoDB Atlas (não precisa instalar) https://www.mongodb.com/cloud




https://cursos.alura.com.br/forum/topico-subir-um-projeto-existente-para-o-github-64968
git init
https://github.com/user/repo.git
git add
git commit -m "primeiro commit
git push origin master


Para executar o backend é necessário fazer uma alteração
Como o backend roda na 3333
e o front end roda no 3000
o react bloqueia o acesso, sendo necessário o desbloqueio

para isso rodar os scripts:
yarn add cors
yarn dev

Vamos considerar que você já tem o git instalado. Primeiro vá no github e crie seu repositório. Clique no símbolo de + no topo da tela e depois em New Repository. Preencha um nome e uma descrição para o projeto e clique em Create repository.

Você já tem seu repositório no github, agora vamos subir seus arquivos pra lá.

Navegue até a pasta do seu repositório e dentro dela use o comando git init, isso vai transformar a sua pasta em um projeto git (Não vai mudar nada).

Agora precisamos linkar seu projeto com o seu repositório no github, pra isso você vai usar o comando git remote add origin https://github.com/user/repo.git. Você vai ter que mudar o link para o link do seu projeto, um projeto meu por exemplo é https://github.com/Vmussato/api-rest-node.git, use o link do seu projeto.

Pronto agora é só subir seus arquivos pro github. Use o comando git add . para adicionar todos os arquivos do projeto. Crie um commit inicial git commit -m "primeiro commit" e depois dê o push git push origin master.

Se ficar com dúvida dê uma olhada neste post do apresentador das lives da Alura.

E por fim depois dê uma olhada em como criar o seu arquivo .gitignore ele serve para fazer o git ignorar algumas pastas que você não precisa subir para o github (No caso do javascript a pasta node_modules e em outros projetos as pastas com outras libs que só são usadas localmente e etc).

